server.port=0
spring.application.name=booking-service
#postgres details
spring.datasource.url=jdbc:postgresql://localhost:5434/booking
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=rentalCars
spring.datasource.password=1234
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=update

#Eureka client
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Keycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/rentalCars-realm/protocol/openid-connect/certs

#Keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8181/realms/rentalCars-realm
spring.security.oauth2.client.registration.keyclock.provider=keycloak
spring.security.oauth2.client.registration.keyclock.scope=openid
spring.security.oauth2.client.registration.keyclock.client-id=rentalCars_client
spring.security.oauth2.client.registration.keyclock.client-secret=b9Lf1hsZWk6r3QegChCCIxmTvmWDajhE
spring.security.oauth2.client.registration.keyclock.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keyclock.redirect-uri={baseUrl}/login/oauth2/code/keycloak

management.tracing.sampling.probability=1.0
